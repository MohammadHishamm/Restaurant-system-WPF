    <ResourceDictionary xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
                    xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml">
    <SolidColorBrush x:Key="Background" Color="#F0F5F9"/>
    <SolidColorBrush x:Key="BackgroundBorder" Color="#B8DBF4"/>
    <Color x:Key="Gradient1">#B9E4FF</Color>
    <Color x:Key="Gradient2">#8FC4FF</Color>
    <Color x:Key="Gradient3">#6DAEFF</Color>
    <SolidColorBrush x:Key="Text" Color="Black"/>
    <SolidColorBrush x:Key="BackgroundText" Color="Black"/>
    <FontFamily x:Key="MyFont">Book Antiqua</FontFamily>
    <SolidColorBrush x:Key="Button" Color="#8AD5FF"/>
    <SolidColorBrush x:Key="MouseOverButton" Color="#5FC7FF"/>
    <Color x:Key="MenuGradient1">#E6F7FF</Color>
    <Color x:Key="MenuGradient2">#B3E3FF</Color>
    <SolidColorBrush x:Key="UserRadioButton" Color="DarkGray"/>
    <SolidColorBrush x:Key="SettingsRadioButton" Color="#9ED2BE"/>
    <SolidColorBrush x:Key="TablesRadioButton" Color="#5FC7FF"/>
    <SolidColorBrush x:Key="ProcurementsRadioButton" Color="#E9B384"/>
    <SolidColorBrush x:Key="LogOutRadioButton" Color="#CE5A67"/>
    <SolidColorBrush x:Key="ErrorText" Color="red"/>
    <SolidColorBrush x:Key="TableBackground" Color="#B3E3FF"/>

    <Style x:Key="MenuButton" TargetType="RadioButton">
        <Setter Property="Height" Value="50"/>
        <Setter Property="Margin" Value="-5,0,0,5"/>
        <Setter Property="Background" Value="Transparent"/>
        <Setter Property="Foreground" Value="{DynamicResource Text}"/>

        <Setter Property="BorderBrush" Value="Transparent"/>
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="RadioButton">
                    <Border Background="{TemplateBinding Background}" BorderThickness="4,0,0,0" BorderBrush="{TemplateBinding BorderBrush}">
                        <ContentPresenter HorizontalAlignment="Left" VerticalAlignment="Center"/>
                    </Border>
                </ControlTemplate>
            </Setter.Value>
        </Setter>

        <Style.Triggers>
            <Trigger Property="IsMouseOver" Value="True">
                <Setter Property="Margin" Value="0,0,0,5"/>
                <Setter Property="Background" Value="{DynamicResource Background}"/>
                <Setter Property="BorderBrush" Value="{Binding Path=Tag, RelativeSource={RelativeSource self}}"/>
            </Trigger>

            <Trigger Property="IsChecked" Value="True">
                <Setter Property="Margin" Value="0,0,0,5"/>
                <Setter Property="Background" Value="{DynamicResource Background}"/>
                <Setter Property="BorderBrush" Value="{Binding Path=Tag, RelativeSource={RelativeSource self}}"/>
            </Trigger>
        </Style.Triggers>
    </Style>

    <Style TargetType="ComboBox" x:Key="ComboBox">
        <Setter Property="Foreground" Value="{StaticResource Text}" />
        <Setter Property="Background" Value="{StaticResource Button}" />
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="ComboBox">
                    <Grid>
                        <ToggleButton
             Name="ToggleButton"
             Grid.Column="2"
             Focusable="false"
             IsChecked="{Binding Path=IsDropDownOpen, Mode=TwoWay, RelativeSource={RelativeSource TemplatedParent}}"
             ClickMode="Press"
             Background="{TemplateBinding Background}">
                        </ToggleButton>
                        <ContentPresenter
             Name="ContentSite"
             IsHitTestVisible="False"
             Content="{TemplateBinding SelectionBoxItem}"
             ContentTemplate="{TemplateBinding SelectionBoxItemTemplate}"
             ContentTemplateSelector="{TemplateBinding ItemTemplateSelector}"
             Margin="3,3,23,3"
             VerticalAlignment="Center"
             HorizontalAlignment="Left" />
                        <Popup
             Name="Popup"
             Placement="Bottom"
             IsOpen="{TemplateBinding IsDropDownOpen}"
             AllowsTransparency="True"
             Focusable="False"
             PopupAnimation="Slide">
                            <Grid
                 Name="DropDown"
                 SnapsToDevicePixels="True"
                 MinWidth="{TemplateBinding ActualWidth}"
                 MaxHeight="{TemplateBinding MaxDropDownHeight}">
                                <Border
                     x:Name="DropDownBorder"
                     Background="{TemplateBinding Background}"
                     BorderThickness="1" />
                                <ScrollViewer Margin="4,6,4,6" SnapsToDevicePixels="True">
                                    <ItemsPresenter />
                                </ScrollViewer>
                            </Grid>
                        </Popup>
                    </Grid>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>
    <Style x:Key="TitleText" TargetType="TextBlock">
        <Setter Property="FontSize" Value="36" />
        <Setter Property="FontWeight" Value="Bold" />
        <Setter Property="TextAlignment" Value="Center" />
        <Setter Property="Foreground" Value="#FFFFFF" />
    </Style>


    <Style x:Key="NormalText" TargetType="TextBlock">
        <Setter Property="FontSize" Value="16" />
        <Setter Property="LineHeight" Value="28" />
        <Setter Property="TextWrapping" Value="Wrap" />
        <Setter Property="TextAlignment" Value="Center" />
        <Setter Property="Foreground" Value="#FFFFFF" />
    </Style>


    <Style x:Key="button" TargetType="{x:Type Button}">
        <Setter Property="FontSize" Value="14" />
        <Setter Property="Width" Value="170" />
        <Setter Property="Background" Value="Transparent" />
        <Setter Property="Foreground" Value="#FDFEFE" />
        <Setter Property="FocusVisualStyle" Value="{x:Null}" />
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type Button}">
                    <Border Background="{TemplateBinding Background}" CornerRadius="25" BorderBrush="White" Padding="15" BorderThickness="1">
                        <ContentPresenter HorizontalAlignment="Center" VerticalAlignment="Center" />
                    </Border>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
        <Style.Triggers>
            <Trigger Property="IsMouseOver" Value="True">
                <Setter Property="Background" Value="#e8e8e8" />
                <Setter Property="Foreground" Value="DimGray" />
            </Trigger>
            <Trigger Property="IsMouseCaptured" Value="True">
                <Setter Property="Background" Value="#d9d9d9" />
                <Setter Property="Foreground" Value="DimGray" />
            </Trigger>
        </Style.Triggers>
    </Style>


    <Style x:Key="buttonCircle" TargetType="Button">
        <Setter Property="Background" Value="Transparent" />
        <Setter Property="Margin" Value="8 0" />
        <Setter Property="FocusVisualStyle" Value="{x:Null}" />
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type Button}">
                    <Border Background="{TemplateBinding Background}" CornerRadius="30" BorderBrush="#878787" Padding="15" BorderThickness="1">
                        <ContentPresenter HorizontalAlignment="Center" VerticalAlignment="Center" />
                    </Border>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
        <Style.Triggers>
            <Trigger Property="IsMouseOver" Value="True">
                <Setter Property="Background" Value="#d9d9d9" />
            </Trigger>
            <Trigger Property="IsMouseCaptured" Value="True">
                <Setter Property="Background" Value="#c4c4c4" />
            </Trigger>
        </Style.Triggers>
    </Style>


    <Style x:Key="imgClose" TargetType="Image">
        <Setter Property="Width" Value="30" />
        <Setter Property="Height" Value="30" />
        <Setter Property="VerticalAlignment" Value="Top" />
        <Setter Property="HorizontalAlignment" Value="Right" />
        <Setter Property="Margin" Value="0 13 13 0" />
        <Style.Triggers>
            <Trigger Property="IsMouseOver" Value="True">
                <Setter Property="RenderTransform">
                    <Setter.Value>
                        <ScaleTransform ScaleX="1.1" ScaleY="1.1"/>
                    </Setter.Value>
                </Setter>
            </Trigger>
        </Style.Triggers>
    </Style>


    <Style x:Key="textHint" TargetType="TextBlock">
        <Setter Property="FontSize" Value="14" />
        <Setter Property="Grid.Column" Value="1" />
        <Setter Property="Panel.ZIndex" Value="1" />
        <Setter Property="Margin" Value="10 0 0 0" />
        <Setter Property="Foreground" Value="#ACB0AF" />
    </Style>


    <Style x:Key="textBox" TargetType="Control">
        <Setter Property="FontSize" Value="14" />
        <Setter Property="Grid.Column" Value="1" />
        <Setter Property="Margin" Value="10 0 0 0" />
        <Setter Property="Foreground" Value="#878787" />
        <Setter Property="BorderBrush" Value="Transparent" />
        <Setter Property="BorderThickness" Value="0" />
    </Style>


    <Style x:Key="mainButton" TargetType="{x:Type Button}">
        <Setter Property="FontSize" Value="14" />
        <Setter Property="Margin" Value="0 20 0 0" />
        <Setter Property="Width" Value="200" />
        <Setter Property="Background" Value="#3AB19B" />
        <Setter Property="Foreground" Value="#FDFEFE" />
        <Setter Property="FocusVisualStyle" Value="{x:Null}" />
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type Button}">
                    <Border Background="{TemplateBinding Background}" CornerRadius="25" BorderBrush="#49B7A3" Padding="15" BorderThickness="1">
                        <ContentPresenter HorizontalAlignment="Center" VerticalAlignment="Center" />
                    </Border>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
        <Style.Triggers>
            <Trigger Property="IsMouseOver" Value="True">
                <Setter Property="Background" Value="#339685" />
                <Setter Property="Foreground" Value="White" />
            </Trigger>
            <Trigger Property="IsMouseCaptured" Value="True">
                <Setter Property="Background" Value="#2d7a6c" />
                <Setter Property="Foreground" Value="White" />
            </Trigger>
        </Style.Triggers>
    </Style>




</ResourceDictionary>