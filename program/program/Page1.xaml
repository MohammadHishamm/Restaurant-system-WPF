<Page x:Class="SideBar_Nav.Pages.Page1"
      xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
      xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
      xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006" 
      xmlns:d="http://schemas.microsoft.com/expression/blend/2008" 
      xmlns:local="clr-namespace:SideBar_Nav.Pages"
      mc:Ignorable="d" 
      MinHeight="600" MinWidth="1044"
      Title="Page1" Height="800">

    <Border Background="{DynamicResource Background}">
        <Grid>
            <Grid.RowDefinitions>
                <RowDefinition Height="60"/>
                <RowDefinition Height="*"/>
            </Grid.RowDefinitions>

            <Border Grid.Row="0">
                <Grid>
                    <Grid.ColumnDefinitions>
                        <ColumnDefinition Width="2*"/>
                        <ColumnDefinition Width="1*"/>
                    </Grid.ColumnDefinitions>


                    <Button x:Name="AddNewItem" Grid.Column="0" Content="Add Order" HorizontalAlignment="Left"
                            FontSize="12" Margin="50,10,0,0" Height="40" Width="120" Command="" VerticalAlignment="Top" Click="AddNewOrder_Click">
                        <Button.Style>
                            <Style TargetType="Button">
                                <Setter Property="Background" Value="{DynamicResource Button}"/>
                                <Style.Triggers>
                                    <Trigger Property="IsMouseOver" Value="True">
                                        <Setter Property="Background" Value="{DynamicResource MouseOverButton}"/>
                                    </Trigger>
                                </Style.Triggers>
                            </Style>
                        </Button.Style>

                        <Button.Template>
                            <ControlTemplate TargetType="Button">
                                <Border Background="{TemplateBinding Background}">
                                    <ContentPresenter VerticalAlignment="Center" HorizontalAlignment="Center"/>
                                </Border>
                            </ControlTemplate>
                        </Button.Template>
                    </Button>

                    <ComboBox x:Name="Users" Grid.Column="0" Margin="190,0,0,0" Height="40" Width="120" HorizontalAlignment="Left" 
                              FontFamily="{DynamicResource MyFont}" FontSize="12" HorizontalContentAlignment="Center" 
                              VerticalContentAlignment="Center" ItemsSource="{Binding Users}" SelectedItem="{Binding SelectedUser}" Style="{DynamicResource ComboBox}"/>

                    <ComboBox x:Name="Month" Grid.Column="1" Margin="0,0,50,0" Height="40" Width="120" HorizontalAlignment="Right" 
                              FontFamily="{DynamicResource MyFont}" FontSize="12" HorizontalContentAlignment="Center" 
                              VerticalContentAlignment="Center" ItemsSource="{Binding Years}" SelectedItem="{Binding SelectedYear}" Style="{DynamicResource ComboBox}"/>

                    <ComboBox x:Name="Year" Grid.Column="1" Margin="0,0,190,0" Height="40" Width="120" HorizontalAlignment="Right" 
                              FontFamily="{DynamicResource MyFont}" FontSize="12" HorizontalContentAlignment="Center" 
                              VerticalContentAlignment="Center" ItemsSource="{Binding Months}" SelectedItem="{Binding SelectedMonth}" Style="{DynamicResource ComboBox}"/>
                </Grid>
            </Border>

            <Border Grid.Row="1">
                <DataGrid x:Name="UsersDataGrid" Background="Transparent" MinWidth="951" HorizontalAlignment="Stretch" Margin="50,5,50,35" Height="auto" Width="auto" 
                          BorderThickness="1" ItemsSource="{Binding Orders}" AutoGenerateColumns="False" IsReadOnly="True" CanUserAddRows="False" SelectedIndex="-1"
                          HeadersVisibility="Column" SelectionUnit="FullRow" BorderBrush="Transparent">
                    <DataGrid.Resources>
                        <Style TargetType="DataGrid">
                            <Setter Property="HorizontalContentAlignment" Value="Left"/>
                            <Setter Property="FontFamily" Value="{DynamicResource MyFont}"/>
                            <Setter Property="FontSize" Value="15"/>
                            <Setter Property="Background" Value="{DynamicResource TableBackground}"/>
                            <Setter Property="Foreground" Value="{DynamicResource BackgroundText}"/>
                            <Setter Property="Height" Value="30"/>
                            <Setter Property="BorderBrush" Value="Transparent"/>
                        </Style>
                        <Style TargetType="DataGridColumnHeader">
                            <Setter Property="HorizontalContentAlignment" Value="Left"/>
                            <Setter Property="FontFamily" Value="{DynamicResource MyFont}"/>
                            <Setter Property="FontSize" Value="15"/>
                            <Setter Property="Background" Value="{DynamicResource TableBackground}"/>
                            <Setter Property="Foreground" Value="{DynamicResource BackgroundText}"/>
                            <Setter Property="Height" Value="30"/>
                            <Setter Property="BorderBrush" Value="Transparent"/>
                            <Setter Property="BorderThickness" Value="0"/>
                        </Style>
                        <Style TargetType="DataGridCell">
                            <Setter Property="Background" Value="{DynamicResource TableBackground}"/>
                            <Setter Property="FontFamily" Value="{DynamicResource MyFont}"/>
                            <Setter Property="FontSize" Value="15"/>
                            <Setter Property="Foreground" Value="{DynamicResource BackgroundText}"/>
                            <Setter Property="Height" Value="30"/>
                            <Setter Property="BorderBrush" Value="Transparent"/>
                            <Setter Property="BorderThickness" Value="0"/>
                        </Style>
                        <Style TargetType="DataGridRow">
                            <Setter Property="IsHitTestVisible" Value="True"/>
                            <Setter Property="Focusable" Value="True"/>
                            <Setter Property="IsEnabled" Value="True"/>
                            <Setter Property="BorderBrush" Value="Transparent"/>
                            <Setter Property="BorderThickness" Value="0"/>
                        </Style>
                    </DataGrid.Resources>
                    <DataGrid.Columns>
                        <DataGridTextColumn Header="Id" Binding="{Binding OrderID}" Width="*"/>
                        <DataGridTextColumn Header="Status" Binding="{Binding Status}" Width="*"/>
                        <DataGridTextColumn Header="Table" Binding="{Binding TableID}" Width="*"/>
                    
                        <DataGridTemplateColumn Header="#" Width="100">
                            <DataGridTemplateColumn.CellTemplate>
                                <DataTemplate>
                                    <StackPanel Orientation="Horizontal" VerticalAlignment="Center" HorizontalAlignment="Center" Width="auto" Height="auto">
                                        <Button x:Name="EditItem" Height="auto" Width="auto" Background="Transparent" HorizontalAlignment="Center" BorderBrush="Transparent"
                                                BorderThickness="0" Command="{Binding DataContext.ShowDetailsCommand, RelativeSource={RelativeSource AncestorType={x:Type DataGrid}}}"
                                                CommandParameter="{Binding}">
                                            Edit 
                                        </Button>

                                        <Button x:Name="DeleteItem"  Click="deleteitem_click" Height="auto" Width="auto" Background="Transparent" HorizontalAlignment="Center" BorderBrush="Transparent"
                                                BorderThickness="0" Command="{Binding DataContext.DeleteCommand, RelativeSource={RelativeSource AncestorType={x:Type DataGrid}}}"
                                                CommandParameter="{Binding}">
                                           Delete
                                        </Button>
                                    </StackPanel>
                                </DataTemplate>
                            </DataGridTemplateColumn.CellTemplate>
                        </DataGridTemplateColumn>
                    </DataGrid.Columns>
                </DataGrid>
            </Border>
        </Grid>
    </Border>
</Page>
